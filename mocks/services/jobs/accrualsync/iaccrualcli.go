// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/jobs/accrualsync/iaccrualcli.go

// Package mock_accrualsync is a generated GoMock package.
package mock_accrualsync

import (
	context "context"
	reflect "reflect"

	models "github.com/NStegura/gophermart/internal/clients/accrual/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAccrualCli is a mock of AccrualCli interface.
type MockAccrualCli struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualCliMockRecorder
}

// MockAccrualCliMockRecorder is the mock recorder for MockAccrualCli.
type MockAccrualCliMockRecorder struct {
	mock *MockAccrualCli
}

// NewMockAccrualCli creates a new mock instance.
func NewMockAccrualCli(ctrl *gomock.Controller) *MockAccrualCli {
	mock := &MockAccrualCli{ctrl: ctrl}
	mock.recorder = &MockAccrualCliMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualCli) EXPECT() *MockAccrualCliMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockAccrualCli) GetOrder(ctx context.Context, number int64) (models.OrderAccrual, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", ctx, number)
	ret0, _ := ret[0].(models.OrderAccrual)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockAccrualCliMockRecorder) GetOrder(ctx, number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockAccrualCli)(nil).GetOrder), ctx, number)
}
